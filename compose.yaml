services:
  # React フロントエンド
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3005:3000"
    environment:
      - VITE_API_BASE_URL=http://localhost:8802/api/v1
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  # Go バックエンドAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8802:8080"
    depends_on:
      - postgres
      - redis
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://developer:password@postgres:5432/movieapi
      - REDIS_URL=redis://redis:6379
      - TMDB_API_KEY=${TMDB_API_KEY}
      - CORS_ORIGINS=http://localhost:3005
    volumes:
      - ./backend:/app
      - /app/tmp
    develop:
      watch:
        - action: rebuild
          path: ./backend
          ignore:
            - ./backend/tmp
  
  # PostgreSQL データベース
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: movieapi
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U developer -d movieapi"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  # Redis キャッシュ
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Adminer (データベース管理ツール)
  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    depends_on:
      - postgres

volumes:
  postgres_data:
  redis_data: